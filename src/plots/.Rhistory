install.packages("scales")
library(ggplot2)
library(gridExtra)
library(scales)
speedups = get_speedups(gpu_Tesla_sparse_avgs, cpu_sparse_avgs)
cpu_dense = read.csv("~/Documents/College/Project/src/timings/cpu_dense_times.csv")
cpu_sparse = read.csv("~/Documents/College/Project/src/timings/cpu_sparse_times.csv")
gpu_Tesla_dense = read.csv("~/Documents/College/Project/src/timings/gpu_Tesla_dense_times.csv")
gpu_Tesla_sparse = read.csv("~/Documents/College/Project/src/timings/gpu_Tesla_sparse_times.csv")
gpu_Tesla_dnsspr = read.csv("~/Documents/College/Project/src/timings/gpu_Tesla_dnsspr_times.csv")
gpu_Tesla_femses = read.csv("~/Documents/College/Project/src/timings/gpu_Tesla_femses_times.csv")
cpu_sparse[10] = cpu_sparse[8]  + cpu_sparse[9]
cpu_dense[10] = cpu_dense[8] + cpu_dense[9]
get_speedups <- function(gpu, cpu){
prob_sizes = as.numeric(unlist(unique(cpu[1])))
speedups = gpu
for(i in prob_sizes){
for(j in 5:12){
speedups[j][speedups[1] == i] = cpu[j][cpu[1] == i] / gpu[j][gpu[1] == i]
}
}
return(speedups)
}
get_averages <- function(df){
avgs = data.frame(aggregate(df,by=list(df$n, df$reconfig!=0, df$block_size_X),data=df,FUN=mean))[4:18]
return(avgs)
}
cpu_sparse_avgs = get_averages(cpu_sparse)
cpu_dense_avgs = get_averages(cpu_dense)
gpu_Tesla_sparse_avgs = get_averages(gpu_Tesla_sparse)
gpu_Tesla_dense_avgs = get_averages(gpu_Tesla_dense)
gpu_Tesla_dnsspr_avgs = get_averages(gpu_Tesla_dnsspr)
gpu_Tesla_femses_avgs = get_averages(gpu_Tesla_dnsspr)
speedups = get_speedups(gpu_Tesla_sparse_avgs, cpu_sparse_avgs)
elem_mats_dev_cpu_speedup_vs_b <- ggplot(subset(speedups,reconfig!=0 & n>=99), aes(block_size_X, log10(elem_mats),
colour = as.factor(n+1))) + geom_point() + geom_smooth()
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log2", function(x) 2^x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10", function(x) 10^x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10")
)
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10", function(x) x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10", function(x) 10^x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10", function(x) x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_continuous(breaks = trans_breaks("log10", function(x) 10^x))
elem_mats_dev_cpu_speedup_vs_b
scaling = scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
speedups = get_speedups(gpu_Tesla_sparse_avgs, cpu_sparse_avgs)
elem_mats_dev_cpu_speedup_vs_b <- ggplot(subset(speedups,reconfig!=0 & n>=99), aes(block_size_X, elem_mats,
colour = as.factor(n+1))) + geom_point() + geom_smooth()
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(x)))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(.x)))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(as.numeric(10^.x))))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", 10^.x))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) .x),
labels = trans_format("log10", math_format(10^.x)))
elem_mats_dev_cpu_speedup_vs_b + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x x)))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x )"x"))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x )))
###### Plots of element matrices evaluation times #####
base_breaks <- function(n = 10){
function(x) {
axisTicks(log10(range(x, na.rm = TRUE)), log = TRUE, n = n)
}
}
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks())
elem_mats_dev_cpu_speedup_vs_b <- ggplot(subset(speedups,reconfig!=0 & n>=99), aes(block_size_X, log10(elem_mats),
colour = as.factor(n+1))) + geom_point() + geom_smooth()
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks())
elem_mats_dev_cpu_speedup_vs_b <- ggplot(subset(speedups,reconfig!=0 & n>=99), aes(block_size_X, elem_mats,
colour = as.factor(n+1))) + geom_point() + geom_smooth()
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks())
elem_mats_dev_cpu_speedup_vs_b
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks())
elem_mats_dev_speedup_99
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() + facet_wrap(~ n, scales="free")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks())
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of length \n by dose",
x ="Dose (mg)", y = "Teeth length")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) labs(title="Plot of length \n by dose",
x ="Dose (mg)", y = "Teeth length")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) labs(title="Plot of length \n by dose",
x ="Dose (mg)", y = "Teeth length")
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() + facet_wrap(~ n, scales="free")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) labs(title="Plot of length \n by dose",
x ="Dose (mg)", y = "Teeth length")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of length \n by dose",
x ="Dose (mg)", y = "Teeth length")
function(x) {
axisTicks(log10(range(x, na.rm = TRUE)), log = TRUE, n = n)
}
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup",
colour = "Mem Reconfig")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup",
colour = "Memory Reconfig")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup",
colour = "MemReconfig")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup") +
scale_color_discrete("Mem Config", c("1:3","1:1","3:1"))
assem_dev_sparse_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, log10(assembly),
colour = as.factor(reconfig))) + geom_point() + geom_smooth() + facet_wrap(~ n, scales="free")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) + labs(title="Plot of element mats etc etc",
x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks())
+ labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
abs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() + facet_wrap(~ n, scales="free", labeller = label_both)
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = "Unknowns = " + c(n))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = "Unknowns = " + n)
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = "Unknowns = " + ~n)
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = "Unknowns = " + speedups$n)
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = "Unknowns = ")
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller("Unknowns = "))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller("Unknowns = "))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller("Unknowns = "))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks()) +
elem_mats_dev_speedup_99
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller("Unknowns = "))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller(n = "Unknowns = "))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller(n = 1))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free")
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = label_both)
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() + facet_wrap(~ n, scales="free", labeller = label_both)
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller(n="Unknowns = "))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller(n=2))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(~ n, scales="free", labeller = labeller(n=c(2,3,4,5)))
elem_mats_dev_cpu_speedup_vs_b + scale_y_log10(breaks = base_breaks()) +
elem_mats_dev_speedup_99
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(.~ n, scales="free", labeller=labeller(n=c(2,3,4,5)))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(.~ n, scales="free", labeller=labeller(n=c("2","3","4","5")))
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
elem_mats_dev_speedups_reconfig <- ggplot(subset(speedups,n>=99 & block_size_X < 224), aes(block_size_X, elem_mats,
colour = as.factor(reconfig))) + geom_point() + geom_smooth() +
facet_wrap(.~ n, scales="free")
elem_mats_dev_speedups_reconfig + scale_y_log10(breaks = base_breaks()) +
labs(title="Plot of element mats etc etc", x ="Block Size", y = "Speedup") +
scale_color_discrete(name="Mem Config", labels =c("1:3","1:1","3:1"))
